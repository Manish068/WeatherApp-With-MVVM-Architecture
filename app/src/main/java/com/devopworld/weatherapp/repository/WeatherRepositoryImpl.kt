package com.devopworld.weatherapp.repositoryimport com.devopworld.weatherapp.feature.mvvm.model.CurrentWeatherResponseimport com.devopworld.weatherapp.feature.mvvm.model.ForecastResponseimport com.devopworld.weatherapp.network.ApiServiceimport retrofit2.Responseimport javax.inject.Injectclass WeatherRepositoryImpl @Inject constructor(    private val apiService: ApiService) : WeatherRepository {    override suspend fun getWeather(): Response<CurrentWeatherResponse>? {        return try {            apiService.getWeather()        } catch (t: Throwable) {            t.printStackTrace()            null        }    }    override suspend fun getForecast(): Response<ForecastResponse>? {        return try {            apiService.getForecast()        } catch (t: Throwable) {            t.printStackTrace()            null        }    }}