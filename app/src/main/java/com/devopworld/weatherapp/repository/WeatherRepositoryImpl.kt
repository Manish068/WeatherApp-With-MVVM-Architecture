package com.devopworld.weatherapp.repositoryimport com.devopworld.weatherapp.feature.mvvm.model.CurrentWeatherResponseimport com.devopworld.weatherapp.feature.mvvm.model.ForecastResponseimport com.devopworld.weatherapp.network.ApiServiceimport dagger.Bindsimport dagger.Moduleimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport retrofit2.Responseimport javax.inject.Injectclass RepositoryImplement @Inject constructor(    private val apiService: ApiService):Repository  {    override suspend fun getWeather(): Response<CurrentWeatherResponse>?{        return try {            apiService.getWeather()        } catch (t: Throwable){            t.printStackTrace()            null        }    }    override suspend fun getForecast(): Response<ForecastResponse>? {        return try {            apiService.getForecast()        }catch (t: Throwable) {            t.printStackTrace()            null        }    }}